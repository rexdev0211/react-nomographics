{"version":3,"sources":["logo.svg","components/constants.js","components/step_1.js","components/step_2.js","components/step_3.js","components/step_4.js","components/step_5.js","components/Echarts/ECharts.js","components/step_6.js","App.js","reportWebVitals.js","index.js"],"names":["Colors","name","calories","fat","carbs","protein","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","fontSize","borderBottom","paddingBottom","body","ColorView","color","style","borderRadius","margin","height","maxWidth","backgroundColor","RandomColorView","item","Math","floor","random","length","Item","React","memo","nomo","deleteHandler","TableContainer","component","Paper","Table","sx","minWidth","size","aria-label","TableHead","TableRow","colSpan","align","TableBody","scope","text","ipa","font","width","IconButton","padding","onClick","e","var","map","row","idx","border","lang","Step1","setNomo","setName","useState","data","setData","loading","setLoading","nameEntered","axios","get","then","response","console","log","Object","values","value","freq","catch","err","useCallback","favoriteValue","preventDefault","sessionId","parseInt","target","attributes","dispatch","type","Container","className","p","display","alignItems","marginBottom","ml","flex","onChange","onKeyDown","keyCode","inputKeyPress","placeholder","Button","variant","CircularProgress","mt","mb","StyledToggleButtonGroup","ToggleButtonGroup","spacing","borderWidth","borderStyle","borderColor","palette","primary","main","flexDirection","boderLeft","borderLeftColor","Step2","shape","setShape","exclusive","event","newAlignment","ToggleButton","Step3","nomographic","setNomographic","setProperty","colorRef","useRef","show","setShow","handleChange","FormControl","RadioGroup","FormControlLabel","control","Radio","label","ref","showButtons","current","getValue","Step4","download","imagetype","setImageType","Step5","ECharts","props","options","message","chart","setChart","chartRef","useEffect","echarts","setOption","resizeObserver","observe","showLoading","hideLoading","clear","newStyle","cx","window","ResizeObserver","entries","instance","resize","initialPie","error","undefined","Step6","property","setCanvas","wordcloud","useTheme","wordData","setWordData","lists","WordCloudOptions","sizeRange","rotationRange","top","layoutAnimation","bottom","drawOutOfBound","gridSize","maskImage","Image","src","changeSize","times","flag","tempList","unshift","prev","setTimeout","cloudOptions","tooltip","series","wordcloud_canvas","querySelector","Card","minHeight","App","aTag","canvas","filename","href","hidden","image","toDataURL","click","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","secondary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6ae3bc8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const Colors = [\"#1ec891\", \"#ff725e\", \"#f3df5b\",\"#f4d05b\",\"#a0f05b\",\"#66fffb\",\"#77d0fb\",\"#8eeeef\",\"#00395b\"];\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\n//FOR API\r\nimport axios from \"axios\";\r\n\r\n//FOR UI\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Input from '@mui/material/InputBase';\r\nimport Button from '@mui/material/Button';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { styled } from '@mui/material/styles';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n//ICON\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport { Colors } from \"./constants\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    fontSize: 12,\r\n    borderBottom: \"none\",\r\n    paddingBottom: 0\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 18,\r\n  }\r\n}));\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n];\r\n\r\nconst ColorView = ({ color }) => {\r\n  return <div style={{ borderRadius: 4, margin: \"auto\", height: 30, maxWidth: 50, backgroundColor: color }} />;\r\n};\r\n\r\nconst RandomColorView = ({ color }) => {\r\n  var item = Colors[Math.floor(Math.random()*Colors.length)];\r\n  return <div style={{ borderRadius: 4, margin: \"auto\", height: 30, maxWidth: 50, backgroundColor: item }} />;\r\n};\r\n\r\nconst Item = React.memo(\r\n  ({ nomo, deleteHandler }) => {\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 350 }} size=\"small\" aria-label=\"a dense table\">\r\n          {nomo.name && (\r\n            <>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell colSpan=\"2\">TAGLINE</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">SIZE</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">COLOR</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">FONT</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <StyledTableCell component=\"th\" scope=\"row\" colSpan=\"2\">\r\n                    Hi, I am {nomo.name.text} but you can call me\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{nomo.name.size}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    <ColorView color={\"#05af53\"} />\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{nomo.ipa.font}</StyledTableCell>\r\n                  <StyledTableCell style={{ width: 30 }}>\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      style={{ padding: 2 }}\r\n                      onClick={(e) => {\r\n                        deleteHandler(e, nomo);\r\n                      }}>\r\n                      <ClearIcon />\r\n                    </IconButton>\r\n                  </StyledTableCell>\r\n\r\n                </TableRow>\r\n              </TableBody>\r\n            </>\r\n          )}\r\n          {nomo.ipa && (\r\n            <>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell colSpan=\"2\">PRONOUNCIATION</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">SIZE</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">COLOR</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">FONT</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <StyledTableCell component=\"th\" scope=\"row\" colSpan=\"2\">\r\n                    /{nomo.ipa.text}/\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"right\">{nomo.ipa.size}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">\r\n                    <ColorView color={\"#05af53\"} />\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"left\">{nomo.ipa.font}</StyledTableCell>\r\n                  <StyledTableCell style={{ width: 30 }}>\r\n                    <IconButton aria-label=\"delete\" style={{ padding: 2 }}>\r\n                      <ClearIcon />\r\n                    </IconButton>\r\n                  </StyledTableCell>\r\n\r\n                </TableRow>\r\n              </TableBody>\r\n            </>\r\n          )}\r\n          {nomo.var && (\r\n            <>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell align=\"right\">LANGUAGE</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">NAME</StyledTableCell>\r\n                  <StyledTableCell align=\"right\">SIZE</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">COLOR</StyledTableCell>\r\n                  <StyledTableCell align=\"left\">FONT</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {nomo.var.map((row, idx) => (\r\n                  <TableRow\r\n                    key={idx}\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                    <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {row.lang || 'lang'}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.text}</StyledTableCell>\r\n                    <StyledTableCell align=\"right\">{row.size}</StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      <RandomColorView color={\"#f5ff53\"} />\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"left\">{row.font}</StyledTableCell>\r\n                    <StyledTableCell style={{ width: 30 }}>\r\n                      <IconButton aria-label=\"delete\" style={{ padding: 2 }}>\r\n                        <ClearIcon />\r\n                      </IconButton>\r\n                    </StyledTableCell>\r\n\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </>\r\n          )}\r\n\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  });\r\n\r\nfunction Step1({nomo, setNomo, name, setName}) {\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const nameEntered = () => {\r\n    setLoading(true);\r\n    if(name.length > 0)\r\n      axios.get(`api/nomo?name=${name}`).then((response) => {\r\n        console.log(\"api url\",`api/nomo?name=${name}`);\r\n        console.log(\"data from api\", response.data);\r\n        setData(response.data);\r\n        var nomo = Object.values(response.data?.var).map(e => (\r\n          {\r\n            ...e,\r\n            value: e.size,\r\n            freq: e.size,\r\n          }));\r\n        console.log('text', nomo);\r\n        setNomo(nomo);\r\n        setLoading(false);\r\n      })\r\n        .catch(err => { console.log(err); setLoading(false); });\r\n    else {\r\n      setNomo({});\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const inputKeyPress = (e) => {\r\n    if (e.keyCode == 13)\r\n      nameEntered();\r\n  };\r\n\r\n  const itemDeleteHandler = useCallback((e, favoriteValue) => {\r\n    e.preventDefault();\r\n    const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\r\n    dispatch({\r\n      type: favoriteValue === true ? \"favorite\" : \"unfavorite\",\r\n      sessionId,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"Step1\">\r\n      <h3>1. Enter your Mondonomo </h3>\r\n      <Paper\r\n        sx={{ p: '0px 0px', display: 'flex', alignItems: 'center', width: 400, margin: 'auto', marginBottom: 1 }}\r\n      >\r\n        <Input\r\n          sx={{ ml: 1, flex: 1 }}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          onKeyDown={(e) => inputKeyPress(e)}\r\n          placeholder=\"Name\"\r\n        />\r\n        <Button variant=\"contained\" onClick={() => nameEntered()}>Generate</Button>\r\n      </Paper>\r\n\r\n      {loading ? <CircularProgress sx={{ mt: 10, mb:10 }} /> :\r\n        <>\r\n          <Item\r\n            nomo={data}\r\n            // deleteHandler={itemDeleteHandler}\r\n          />\r\n          <Button sx={{ mt: 1}}>Add New Language +</Button>\r\n        </>\r\n      }\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step1;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n//FOR UI\r\nimport Container from '@mui/material/Container';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\r\nimport ChangeHistoryIcon from '@mui/icons-material/ChangeHistory';\r\nimport ReportGmailerrorredIcon from '@mui/icons-material/ReportGmailerrorred';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\n\r\nconst StyledToggleButtonGroup = styled(ToggleButtonGroup)(({ theme }) => ({\r\n  '& .MuiToggleButtonGroup-grouped': {\r\n    margin: theme.spacing(3),\r\n    borderWidth: 1,\r\n    borderStyle: \"solid\",\r\n    borderColor: theme.palette.primary.main,\r\n    borderRadius: 6,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: 128,\r\n    height: 128,\r\n    '&.Mui-selected': {\r\n      borderWidth: 3,\r\n      backgroundColor: \"transparent\"\r\n    },\r\n    '&:not(:first-of-type)': {\r\n      borderRadius: 8,\r\n      boderLeft: \"0px\",\r\n      borderLeftColor: theme.palette.primary.main\r\n    },\r\n    '&:first-of-type': {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Step2({ shape, setShape }) {\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    if(newAlignment === null) return;\r\n    setShape(newAlignment);\r\n  };\r\n  return (\r\n    <Container className=\"Step2\">\r\n      <h3>2. Choose Shape</h3>\r\n      <StyledToggleButtonGroup\r\n          size=\"small\"\r\n          value={shape}\r\n          exclusive\r\n          onChange={handleAlignment}\r\n          aria-label=\"text alignment\"\r\n        >\r\n          <ToggleButton value=\"square\" aria-label=\"left aligned\">\r\n            <ChatBubbleOutlineIcon />Speech Bubble\r\n          </ToggleButton>\r\n          <ToggleButton value=\"cardioid\" aria-label=\"centered\">\r\n            <FavoriteBorderIcon />Heart\r\n          </ToggleButton>\r\n          <ToggleButton value=\"star\" aria-label=\"centered\">\r\n            <StarBorderIcon />Star\r\n          </ToggleButton>\r\n          <ToggleButton value=\"triangle\" aria-label=\"centered\">\r\n            <ChangeHistoryIcon />Triangle\r\n          </ToggleButton>\r\n          <ToggleButton value=\"twitter\" aria-label=\"centered\">\r\n            <TwitterIcon />Twitter\r\n          </ToggleButton>\r\n          <ToggleButton value=\"new\" aria-label=\"right aligned\">\r\n            <AddIcon />Upload New Shape\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step2;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\n//FOR API\r\nimport axios from \"axios\";\r\n\r\n//FOR UI\r\n\r\nimport Container from '@mui/material/Container';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from '@mui/material/Button';\r\nimport { ColorPickerComponent } from '@syncfusion/ej2-react-inputs';\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\nimport \"@syncfusion/ej2-splitbuttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\n\r\n\r\nfunction Step3({ nomographic, setNomographic, shape, setProperty }) {\r\n\r\n  const colorRef = useRef(null);\r\n\r\n  const [color,setColor] = useState('#02B9B9');\r\n  const [show, setShow] = useState(false);\r\n  const handleChange = (event, value) => {\r\n    console.log('handleChange');\r\n    setNomographic(value);\r\n  };\r\n\r\n  const changeProperty = () => {\r\n    let color = colorRef.current.getValue();\r\n    setShow( !show );\r\n    setProperty({\r\n      shape,\r\n      nomographic,\r\n      color,\r\n      show\r\n    });\r\n  };\r\n\r\n  const handleChangeComplete = (color) => {\r\n    setColor(color.hex);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"Step3\">\r\n      <h3>3. Create Nomographic</h3>\r\n      <FormControl component=\"fieldset\">\r\n        <RadioGroup\r\n          row aria-label=\"gender\" name=\"row-radio-buttons-group\" align=\"center\"\r\n          value={nomographic}\r\n          onChange={handleChange}\r\n        >\r\n          <FormControlLabel value=\"0\" control={<Radio />} label=\"ALLOW HORIZONTAL\" />\r\n          <FormControlLabel value=\"90\" control={<Radio />} label=\"REPEAT VERTICAL\" />\r\n        </RadioGroup>\r\n        <div className='wrap'>\r\n          <h3>4. Choose Color</h3>\r\n          <ColorPickerComponent ref={colorRef} value=\"#02B9B9\" onChange={handleChange} showButtons={true}/>\r\n        </div>\r\n        <Button variant=\"contained\" onClick={changeProperty}>Create</Button>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step3;\r\n","import Container from '@mui/material/Container';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction Step4({ download, imagetype, setImageType }) {\r\n\r\n  const handleChange = (event, value) => {\r\n    setImageType(value);\r\n  };\r\n\r\n\r\n  return (\r\n    <Container className=\"Step4\" sx={{ mb:20 }}>\r\n      <h3>4. Choose file type to download</h3>\r\n      <FormControl component=\"fieldset\">\r\n        <RadioGroup row aria-label=\"type\" name=\"row-radio-buttons-group\" align=\"center\"\r\n         value={imagetype}\r\n         onChange={handleChange}\r\n        >\r\n          <FormControlLabel value=\"PNG\" control={<Radio />} label=\"PNG\" />\r\n          <FormControlLabel value=\"JPG\" control={<Radio />} label=\"JPG\" />\r\n          <FormControlLabel value=\"EPS\" control={<Radio />} label=\"EPS\" />\r\n          <FormControlLabel value=\"PDF\" control={<Radio />} label=\"PDF\" />\r\n          <FormControlLabel value=\"SVG\" control={<Radio />} label=\"SVG\" />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <br/>\r\n      <Button variant=\"contained\" onClick={download}>Download</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Step4;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { render } from 'react-dom';\r\nimport WordCloud from \"react-wordcloud2\";\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\n\r\n\r\nfunction Step5({ nomo, property, setCanvas, name }) {\r\n  const wordcloud = useRef(null);\r\n  const theme = useTheme();\r\n  const [list, setList] = useState([]);\r\n  const [origin_y, setOrigin_y] = useState(250);\r\n\r\n  const changeSize = (times = 1, flag = false) => {\r\n\r\n    let tempList = nomo.map(value =>[value.text, value.size / times]);\r\n    if(!flag) {\r\n      tempList.unshift([\r\n        `but you can call me`, 8\r\n      ]);\r\n      tempList.unshift([\r\n        `Hi, I am ${name}`, 8\r\n      ]);\r\n    }\r\n    return tempList;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList([...changeSize(1), ...changeSize(2, true), ...changeSize(3, true), ...changeSize(4, true), ...changeSize(4, true)]);\r\n    if(property?.shape=='cardioid'){\r\n      setOrigin_y(50);\r\n    }else {\r\n      setOrigin_y(250);\r\n    }\r\n  }, [nomo, property]);\r\n\r\n  useEffect(() => {\r\n    setCanvas(wordcloud?.current.querySelector('canvas'));\r\n  }, [wordcloud]);\r\n\r\n  return (\r\n    <Card sx={{\r\n        minWidth: 275,\r\n        minHeight: 100,\r\n        mt: 1,\r\n        borderWidth: 1,\r\n        borderStyle: \"solid\",\r\n        borderColor: theme.palette.primary.main,\r\n        borderRadius: 4,\r\n      }}\r\n      ref={wordcloud}\r\n      >\r\n        <WordCloud\r\n        color=\"random-light\"\r\n        shape={property?.shape}\r\n        minSize={0.5}\r\n        backgroundColor = \"black\"\r\n        shuffle = {true}\r\n        shrinkToFit= {true}\r\n        drawOutOfBound = {false}\r\n        minRotation={0}\r\n        maxRotation={0}\r\n        ellipticity={0.55}\r\n        weightFactor={6}\r\n        list={list}\r\n        width={800}\r\n        height={550}\r\n        origin={[400, origin_y]}\r\n      />\r\n      </Card>\r\n  );\r\n}\r\n\r\nexport default Step5;\r\n","/* Created by Dhaval Laiya */\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as echarts from \"echarts\";\r\nimport cx from \"classnames\";\r\n\r\nfunction ECharts(props) {\r\n  const { options, style, className, loading, message } = props;\r\n  const [chart, setChart] = useState(null);\r\n  const chartRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const chart = echarts.init(chartRef.current, \"westeros\"); // echarts theme\r\n    chart.setOption({ ...options, resizeObserver }, true); // second param is for 'noMerge'\r\n    setChart(chart);\r\n    if (resizeObserver) resizeObserver.observe(chartRef.current);\r\n  }, [options]);\r\n\r\n  useEffect(() => {\r\n    if (!chart) {\r\n      return;\r\n    }\r\n    if (loading) {\r\n      chart.showLoading();\r\n      return;\r\n    }\r\n\r\n    chart.hideLoading();\r\n  }, [chart, loading]);\r\n\r\n  useEffect(() => {\r\n    if (chart && options && message) {\r\n      chart.clear();\r\n    }\r\n  }, [message]);\r\n\r\n  const newStyle = {\r\n    height: 800,\r\n    ...style\r\n  };\r\n\r\n  return (\r\n    <div className=\"echarts-parent position-relative\">\r\n      <div\r\n        ref={chartRef}\r\n        style={newStyle}\r\n        className={cx(\"echarts-react\", className)}\r\n      />\r\n      {message ? <div className=\"no-data\">{message}</div> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nECharts.propTypes = {\r\n  loading: PropTypes.bool,\r\n  options: PropTypes.any,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  message: PropTypes.any\r\n};\r\n\r\nconst resizeObserver = new window.ResizeObserver((entries) => {\r\n  entries.map(({ target }) => {\r\n    const instance = echarts.getInstanceByDom(target);\r\n    if (instance) {\r\n      instance.resize();\r\n    }\r\n  });\r\n});\r\n\r\nexport default React.memo(ECharts);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport ECharts from \"./Echarts/ECharts\";\r\nimport \"echarts-wordcloud\";\r\n\r\nconst initialPie = { data: [], error: undefined, loading: true };\r\n\r\nfunction Step6({ nomo, property, setCanvas, name }) {\r\n  const wordcloud = useRef(null);\r\n  const theme = useTheme();\r\n  const [wordData, setWordData] = useState(initialPie);\r\n\r\n  let lists = [];\r\n  let WordCloudOptions = {\r\n    type: \"wordCloud\",\r\n    sizeRange: [15, 75],\r\n    rotationRange: [0, 0],\r\n    width: \"50%\",\r\n    height: \"90%\",\r\n    top: \"5%\",\r\n    layoutAnimation: false,\r\n    bottom: \"5%\",\r\n    drawOutOfBound: false,\r\n    gridSize: 6\r\n  };\r\n\r\n  WordCloudOptions['rotationRange'] = [property?.nomographic, property?.nomographic];\r\n  if ( property?.shape == 'cardioid' ) {\r\n    WordCloudOptions['width'] = \"1000px\";\r\n    WordCloudOptions['height'] = \"800px\";\r\n    WordCloudOptions['top'] = \"0%\";\r\n    WordCloudOptions['bottom'] = \"5%\";\r\n  } else if ( property?.shape == 'twitter' ){\r\n    WordCloudOptions['width'] = \"1300px\";\r\n    WordCloudOptions['height'] = \"1100px\";\r\n    WordCloudOptions['top'] = \"-15%\";\r\n    WordCloudOptions['bottom'] = \"5%\";\r\n  } else if ( property?.shape == 'square' ){\r\n    WordCloudOptions['width'] = \"1200px\";\r\n    WordCloudOptions['height'] = \"800px\";\r\n    WordCloudOptions['top'] = \"5%\";\r\n    WordCloudOptions['bottom'] = \"5%\";\r\n  } else if ( property?.shape == 'triangle' ){\r\n    WordCloudOptions['width'] = \"1170px\";\r\n    WordCloudOptions['height'] = \"100%\";\r\n    WordCloudOptions['top'] = \"-10%\";\r\n    WordCloudOptions['bottom'] = \"5%\";\r\n  } else {\r\n    WordCloudOptions['width'] = \"1200px\";\r\n    WordCloudOptions['height'] = \"1000px\";\r\n    WordCloudOptions['top'] = \"-10%\";\r\n    WordCloudOptions['bottom'] = \"5%\";\r\n  }\r\n    const maskImage = new Image();\r\n    maskImage.src = './maskImage/' + property?.shape + '.jpg';\r\n    WordCloudOptions['maskImage'] = maskImage;\r\n\r\n  function getWordCloud() {\r\n    setWordData((prev) => ({ ...prev, loading: true }));\r\n    setTimeout(() => {\r\n      const cloudOptions = {\r\n        tooltip: {\r\n          show: true\r\n        },\r\n        series: [\r\n          {\r\n            ...WordCloudOptions,\r\n            color: property?.color,\r\n            data: lists\r\n          }\r\n        ]\r\n      };\r\n\r\n      setWordData({\r\n        data: cloudOptions,\r\n        error: false,\r\n        loading: false\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  const changeSize = (times = 1, flag = false) => {\r\n    let tempList = nomo?.map(value => ({ name: value.text, value: value.size / times }));\r\n\r\n    if ( !flag ) {\r\n      tempList.unshift({\r\n        name: `Hi, I am ${name}`, value: 12\r\n      });\r\n      if( property?.shape == 'triangle') {\r\n        tempList.unshift({\r\n          name: `but you can call me`, value: 11\r\n        });\r\n      } else {\r\n        tempList.unshift({\r\n          name: `but you can call me`, value: 12\r\n        });\r\n      }\r\n    }\r\n\r\n    return tempList;\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('property',property);\r\n    if( nomo.length > 6) {\r\n        lists = [...changeSize(3),\r\n          ...changeSize(1.5, true),\r\n          ...changeSize(2, true),\r\n          ...changeSize(0.9, true),\r\n          ...changeSize(1, true)];\r\n    } else {\r\n      lists = [...changeSize(3),\r\n         ...changeSize(1.5, true), ...changeSize(2, true), ...changeSize(0.9, true), ...changeSize(1, true),\r\n         ...changeSize(1.5, true), ...changeSize(2, true), ...changeSize(0.9, true), ...changeSize(1, true),\r\n         ...changeSize(1.5, true), ...changeSize(2, true), ...changeSize(0.9, true), ...changeSize(1, true)];\r\n    }\r\n\r\n\r\n    getWordCloud();\r\n\r\n    let wordcloud_canvas = wordcloud?.current.querySelector('div').querySelector('div').querySelector('div').querySelector('canvas');\r\n    if (wordcloud_canvas == null) {\r\n      wordcloud_canvas = wordcloud?.current.querySelector('div').querySelector('div').querySelector('canvas');\r\n    }\r\n    setCanvas(wordcloud_canvas);\r\n\r\n\r\n  }, [property]);\r\n\r\n  useEffect(() => {\r\n  }, [wordcloud]);\r\n\r\n\r\n  return (\r\n    <Card sx={{\r\n      minWidth: 275,\r\n      minHeight: 200,\r\n      mt: 1,\r\n      borderWidth: 1,\r\n      borderStyle: \"solid\",\r\n      borderColor: theme.palette.primary.main,\r\n      borderRadius: 4,\r\n    }}\r\n      ref={wordcloud}\r\n    >\r\n      <ECharts\r\n        loading={wordData.loading}\r\n        options={wordData.data}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Step6;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Step1 from './components/step_1';\r\nimport Step2 from './components/step_2';\r\nimport Step3 from './components/step_3';\r\nimport Step4 from './components/step_4';\r\nimport Step5 from './components/step_5';\r\nimport Step6 from './components/step_6';\r\nfunction App() {\r\n  const aTag = useRef(null);\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [nomo, setNomo] = useState([]);\r\n  const [shape, setShape] = useState('archimedean');\r\n  const [nomographic, setNomographic] = useState(0);\r\n  const [property, setProperty] = useState(null);\r\n  const [imagetype,setImageType] = useState('PNG');\r\n  const [name, setName] = useState('');\r\n\r\n  const download = () => {\r\n    if ( canvas!=null ) {\r\n      let image = canvas.toDataURL(\"image/\"+imagetype);\r\n      aTag.current.href = image;\r\n      aTag.current.click();\r\n    }\r\n  };\r\n\r\n  const filename = \"myImage.\"+imagetype;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <a ref={aTag} href=\"\" download={filename} hidden>download img</a>\r\n      <Step1 nomo={nomo} setNomo={(nomo) => setNomo(nomo)} name={name} setName={setName}/>\r\n      <Step2 shape={shape} setShape={setShape} />\r\n      <Step3 nomographic={nomographic} setNomographic={setNomographic} shape={shape} setProperty={setProperty} />\r\n      {/* <Step5 nomo={nomo} property={property} shape={shape} nomographic={nomographic} setCanvas={setCanvas} name={name}/> */}\r\n      <Step6 nomo={nomo} property={property} shape={shape} nomographic={nomographic} setCanvas={setCanvas} name={name}/>\r\n      <Step4 imagetype = {imagetype} setImageType={setImageType} download={download}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#26a69a',\n    },\n    secondary: {\n      main: '#004d40',\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}